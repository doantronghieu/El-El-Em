openapi: 3.0.0
info:
  version: '1.0.0'
  title: Authentication API

tags:
  - name: Authentication
    description: Authentication API
  - name: Conversations
    description: API operations related to conversations.
  - name: Scores
    description: API operations related to scoring messages in a conversation.
  - name: Pdfs
    description: API operations related to pdfing and downloading files.

paths:
  /api/auth/user:
    get:
      tags:
        - Authentication
      summary: Get user details
      description: Get information about the currently signed in user
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '204':
          description: No content

  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: Sign up
      description: Creates and authenticates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: email already registered or other error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/signin:
    post:
      tags:
        - Authentication
      summary: Sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignIn'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Incorrect password or user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/signout:
    post:
      tags:
        - Authentication
      summary: Sign out
      description: Signs the currently authenticated user out.
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/conversations/:
    get:
      tags:
        - Conversations
      description: List all the conversations for a given pdf.
      parameters:
        - in: query
          name: pdf_id
          required: true
          description: ID of the pdf.
          schema:
            type: string
      responses:
        200:
          description: An array of conversations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conversation'
        404:
          description: Pdf not found.
        401:
          description: Unauthorized access.

    post:
      tags:
        - Conversations
      description: Create a new conversation for a given pdf.
      parameters:
        - in: query
          name: pdf_id
          required: true
          description: ID of the pdf.
          schema:
            type: string
      responses:
        200:
          description: Created conversation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        404:
          description: File not found.
        401:
          description: Unauthorized access.

  /api/conversations/{conversation_id}/messages:
    post:
      tags:
        - Conversations
      description: Create a message in a conversation.
      parameters:
        - in: path
          name: conversation_id
          required: true
          description: ID of the conversation.
          schema:
            type: string
        - in: query
          name: stream
          required: false
          description: Flag to determine if the response should be streamed.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
              required:
                - input
      responses:
        200:
          description: Message created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  content:
                    type: string
        401:
          description: Unauthorized access.
  /api/scores/:
    post:
      tags:
        - Scores
      summary: Update the score for a specific conversation
      description: Update the score of a conversation. Only the owner of the conversation can do this.
      parameters:
        - name: conversation_id
          in: query
          description: ID of the conversation
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  description: Score to set for the conversation (-1 to 1)
              required:
                - score
      responses:
        '200':
          description: Score updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input or unauthorized action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      tags:
        - Scores
      summary: Retrieve a list of scores
      description: Get scores for all conversations that belong to the current user
      responses:
        '200':
          description: List of scores
          content:
            application/json:
              schema:
                type: object
                properties:
                  llm:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: number
                        format: float
                  retriever:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: number
                        format: float
                  memory:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: number
                        format: float
  /api/pdfs/:
    get:
      tags:
        - Pdfs
      summary: List all pdfs for a user.
      description: Retrieves a list of all pdfed files for the logged in user.
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pdf'
        '401':
          description: Unauthorized access.

    post:
      tags:
        - Pdfs
      summary: Pdf a new file.
      description: Pdfs a new file and returns its details.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pdf'
        '400':
          description: Bad request.
        '401':
          description: Unauthorized access.

  /api/pdfs/{id}:
    get:
      tags:
        - Pdfs
      summary: Get details of a specific pdf.
      description: Retrieves the details and download URL of an pdfed file.
      parameters:
        - name: id
          in: path
          description: ID of the pdf to be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pdf:
                    $ref: '#/components/schemas/Pdf'
                  download_url:
                    type: string
        '401':
          description: Unauthorized access.
        '404':
          description: Pdf not found.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
    SignUp:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    SignIn:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    Conversation:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        pdf_id:
          type: string
      required:
        - id
        - user_id
        - pdf_id
    Pdf:
      type: object
      properties:
        id:
          type: string
          description: The ID of the pdf.
        name:
          type: string
          description: Name of the file.
        user_id:
          type: string
          description: ID of the user who pdfed the file.
